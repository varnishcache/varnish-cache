## Generated by vmodtool.py --boilerplate.

vmod_LTLIBRARIES += libvmod_proxy.la
dist_vcc_DATA += $(srcdir)/vmod_proxy.vcc

libvmod_proxy_la_SOURCES = \
	vmod_proxy.c

libvmod_proxy_la_CFLAGS =

vmodtoolargs_proxy ?= --strict --boilerplate -o vcc_proxy_if
vmod_proxy_symbols_regex ?= Vmod_proxy_Data

libvmod_proxy_la_LDFLAGS = \
	-export-symbols-regex $(vmod_proxy_symbols_regex) \
	$(AM_LDFLAGS) \
	$(VMOD_LDFLAGS)

nodist_libvmod_proxy_la_SOURCES = vcc_proxy_if.c vcc_proxy_if.h

EXTRA_libvmod_proxy_la_DEPENDENCIES = $(nodist_libvmod_proxy_la_SOURCES)

EXTRA_DIST += automake_boilerplate_proxy.am

$(libvmod_proxy_la_OBJECTS): vcc_proxy_if.h

vcc_proxy_if.h vmod_proxy.rst vmod_proxy.man.rst: vcc_proxy_if.c

# A doc-change will not update mtime on the .h and .c files, so a
# touch(1) is necessary to signal that vmodtool was in fact run.
vcc_proxy_if.c: $(VMODTOOL) $(srcdir)/vmod_proxy.vcc
	@PYTHON@ $(VMODTOOL) $(vmodtoolargs_proxy) $(srcdir)/vmod_proxy.vcc
	touch vcc_proxy_if.c

clean-local: clean-vmod-proxy

clean-vmod-proxy:
	rm -f $(nodist_libvmod_proxy_la_SOURCES)
	rm -f vmod_proxy.rst vmod_proxy.man.rst
