## Generated by vmodtool.py --boilerplate.

vmod_LTLIBRARIES += libvmod_purge.la
dist_vcc_DATA += $(srcdir)/vmod_purge.vcc

libvmod_purge_la_SOURCES = \
	vmod_purge.c

libvmod_purge_la_CFLAGS =

vmodtoolargs_purge ?= --strict --boilerplate -o vcc_purge_if
vmod_purge_symbols_regex ?= Vmod_purge_Data

libvmod_purge_la_LDFLAGS = \
	-export-symbols-regex $(vmod_purge_symbols_regex) \
	$(AM_LDFLAGS) \
	$(VMOD_LDFLAGS)

nodist_libvmod_purge_la_SOURCES = vcc_purge_if.c vcc_purge_if.h

EXTRA_libvmod_purge_la_DEPENDENCIES = $(nodist_libvmod_purge_la_SOURCES)

EXTRA_DIST += automake_boilerplate_purge.am

$(libvmod_purge_la_OBJECTS): vcc_purge_if.h

vcc_purge_if.h vmod_purge.rst vmod_purge.man.rst: vcc_purge_if.c

# A doc-change will not update mtime on the .h and .c files, so a
# touch(1) is necessary to signal that vmodtool was in fact run.
vcc_purge_if.c: $(VMODTOOL) $(srcdir)/vmod_purge.vcc
	@PYTHON@ $(VMODTOOL) $(vmodtoolargs_purge) $(srcdir)/vmod_purge.vcc
	touch vcc_purge_if.c

clean-local: clean-vmod-purge

clean-vmod-purge:
	rm -f $(nodist_libvmod_purge_la_SOURCES)
	rm -f vmod_purge.rst vmod_purge.man.rst
