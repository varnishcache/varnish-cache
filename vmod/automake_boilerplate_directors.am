## Generated by vmodtool.py --boilerplate.

vmod_LTLIBRARIES += libvmod_directors.la
dist_vcc_DATA += $(srcdir)/vmod_directors.vcc

libvmod_directors_la_SOURCES = \
	vmod_directors.c \
	vmod_directors.h \
	vmod_directors_fall_back.c \
	vmod_directors_hash.c \
	vmod_directors_random.c \
	vmod_directors_round_robin.c \
	vmod_directors_shard.c \
	vmod_directors_shard_cfg.c \
	vmod_directors_shard_cfg.h \
	vmod_directors_shard_dir.c \
	vmod_directors_shard_dir.h

libvmod_directors_la_CFLAGS =

vmodtoolargs_directors ?= --strict --boilerplate -o vcc_directors_if
vmod_directors_symbols_regex ?= Vmod_directors_Data

libvmod_directors_la_LDFLAGS = \
	-export-symbols-regex $(vmod_directors_symbols_regex) \
	$(AM_LDFLAGS) \
	$(VMOD_LDFLAGS)

nodist_libvmod_directors_la_SOURCES = vcc_directors_if.c vcc_directors_if.h

EXTRA_libvmod_directors_la_DEPENDENCIES = $(nodist_libvmod_directors_la_SOURCES)

EXTRA_DIST += automake_boilerplate_directors.am

$(libvmod_directors_la_OBJECTS): vcc_directors_if.h

vcc_directors_if.h vmod_directors.rst vmod_directors.man.rst: vcc_directors_if.c

# A doc-change will not update mtime on the .h and .c files, so a
# touch(1) is necessary to signal that vmodtool was in fact run.
vcc_directors_if.c: $(VMODTOOL) $(srcdir)/vmod_directors.vcc
	@PYTHON@ $(VMODTOOL) $(vmodtoolargs_directors) $(srcdir)/vmod_directors.vcc
	touch vcc_directors_if.c

clean-local: clean-vmod-directors

clean-vmod-directors:
	rm -f $(nodist_libvmod_directors_la_SOURCES)
	rm -f vmod_directors.rst vmod_directors.man.rst
