## Generated by vmodtool.py --boilerplate.

vmod_LTLIBRARIES += libvmod_blob.la
dist_vcc_DATA += $(srcdir)/vmod_blob.vcc

libvmod_blob_la_SOURCES = \
	vmod_blob.c \
	vmod_blob.h \
	vmod_blob_base64.c \
	vmod_blob_hex.c \
	vmod_blob_id.c \
	vmod_blob_tbl_case.h \
	vmod_blob_tbl_encodings.h \
	vmod_blob_url.c

libvmod_blob_la_CFLAGS =

vmodtoolargs_blob ?= --strict --boilerplate -o vcc_blob_if
vmod_blob_symbols_regex ?= Vmod_blob_Data

libvmod_blob_la_LDFLAGS = \
	-export-symbols-regex $(vmod_blob_symbols_regex) \
	$(AM_LDFLAGS) \
	$(VMOD_LDFLAGS) \
	-rpath $(vmoddir)

nodist_libvmod_blob_la_SOURCES = vcc_blob_if.c vcc_blob_if.h

EXTRA_libvmod_blob_la_DEPENDENCIES = $(nodist_libvmod_blob_la_SOURCES)

EXTRA_DIST += automake_boilerplate_blob.am

$(libvmod_blob_la_OBJECTS): vcc_blob_if.h

vcc_blob_if.h vmod_blob.rst vmod_blob.man.rst: vcc_blob_if.c

# A doc-change will not update mtime on the .h and .c files, so a
# touch(1) is necessary to signal that vmodtool was in fact run.
vcc_blob_if.c: $(VMODTOOL) $(srcdir)/vmod_blob.vcc
	@PYTHON@ $(VMODTOOL) $(vmodtoolargs_blob) $(srcdir)/vmod_blob.vcc
	touch vcc_blob_if.c

clean-local: clean-vmod-blob

clean-vmod-blob:
	rm -f $(nodist_libvmod_blob_la_SOURCES)
	rm -f vmod_blob.rst vmod_blob.man.rst
