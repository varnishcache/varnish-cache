## Generated by vmodtool.py --boilerplate.

vmod_LTLIBRARIES += libvmod_std.la
dist_vcc_DATA += $(srcdir)/vmod_std.vcc

libvmod_std_la_SOURCES = \
	vmod_std.c \
	vmod_std_conversions.c \
	vmod_std_fileread.c \
	vmod_std_querysort.c

libvmod_std_la_CFLAGS =

vmodtoolargs_std ?= --strict --boilerplate -o vcc_std_if
vmod_std_symbols_regex ?= Vmod_std_Data

libvmod_std_la_LDFLAGS = \
	-export-symbols-regex $(vmod_std_symbols_regex) \
	$(AM_LDFLAGS) \
	$(VMOD_LDFLAGS) \
	-rpath $(vmoddir)

nodist_libvmod_std_la_SOURCES = vcc_std_if.c vcc_std_if.h

EXTRA_libvmod_std_la_DEPENDENCIES = $(nodist_libvmod_std_la_SOURCES)

EXTRA_DIST += automake_boilerplate_std.am

$(libvmod_std_la_OBJECTS): vcc_std_if.h

vcc_std_if.h vmod_std.rst vmod_std.man.rst: vcc_std_if.c

# A doc-change will not update mtime on the .h and .c files, so a
# touch(1) is necessary to signal that vmodtool was in fact run.
vcc_std_if.c: $(VMODTOOL) $(srcdir)/vmod_std.vcc
	@PYTHON@ $(VMODTOOL) $(vmodtoolargs_std) $(srcdir)/vmod_std.vcc
	touch vcc_std_if.c

clean-local: clean-vmod-std

clean-vmod-std:
	rm -f $(nodist_libvmod_std_la_SOURCES)
	rm -f vmod_std.rst vmod_std.man.rst
